<?php

namespace AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * creditonlineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class propositionRepository extends \Doctrine\ORM\EntityRepository
{

    public function getFilteredShops($money,$term)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT P FROM AppBundle:proposition P WHERE P.summin<=:money AND P.firstSummax>=:money AND P.daymin<=:term AND P.firstDaymax>=:term ORDER BY P.recomended DESC')->setParameter('money', $money)->setParameter('term',$term);
        // $query = $em->createQuery('SELECT C FROM AppBundle:creditonline C WHERE C.firstmin<=:money ')->setParameter('money', $money);
        $shops = $query->getResult();
        return $shops;
    }

    public function getShops()
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT P.company, P.id, P.img, P.site FROM AppBundle:proposition P');
        $shops = $query->getResult();
        return $shops;
    }
    
    public function findOneByIdWithContact($id)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT P FROM AppBundle:proposition P WHERE P.id=:id')->setParameter('id', $id);
        $shops = $query->getResult()[0];
        //return $query->getSingleResult();
        return $shops;
    }

    public function addComments($user,$mail,$msg,$rank,$service)
    {
        $em = $this->getEntityManager();
        $proposition = $em->createQuery('SELECT P FROM AppBundle:proposition P WHERE P.id=:id')->setParameter('id', $id);
        $comment = new Comments();
        $proposition->setComment($comment);
        //$shops = $query->getResult()[0];
        //return $query->getSingleResult();
        //return $shops;
    }
}
